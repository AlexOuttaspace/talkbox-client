18.12

should do client.resetStore() on logout so that every private data inside apollo cache is destroyed.

storing tokens in apollo cache is a bad idea, because it makes managing them way harder. Like when user tries to access a private route with bad tokens, we can erase them from headers by setting a 'Set-Cookie' header, but how are we gonna remove those tokens from apollo cache? 

if we store tokens only within cookies, refreshing tokens functionality will stil work because when server fails to decode access token, he will use refresh token. However we need to work on a case when refresh token is invalid as well. So maybe we need to use refresh token as a source for isAuthenticated status?

DAMN! if we store tokens only in cookies how are we gonna get them inside an apollo's middleware?0

we use hardRedirect which will use window.location.replase('/login') in order to renew apollo's state, when user tries to access private route on the client

functionality of hard redirect is not tested yet


complete token handling schema:

1. request comes to next.js server
2. We extract rokens from cookies
3. If there's no tokens, we put null as their values in apollo cache
4. If we only get refreshToken from cookies, it means that our access token has expired, so we need to send a request to server to refresh our tokens.
